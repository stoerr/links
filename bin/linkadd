#!/usr/bin/env bash
function usage() {
  cat <<EOF
Usage: $0 [--help] [-h] url
Add a link to the database
url: the url of the link
--help, -h: display this message
EOF
}

# parse arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    --help|-h)
      usage
      exit 0
      ;;
    *)
      url=$1
      shift
      ;;
  esac
  shift
done

set -e

# ensure mandatory arguments are present
if [[ -z "$url" || -n "$2" ]]; then
  usage
  exit 1
fi


# dir is the directory where the links project is located
dir=$(dirname "$(realpath $0)")/..
cd "$dir"

# Check whether the url is already in one of the link files
# refuse adding if it is - just print the file name and exit

if grep -l "$url" 20*/**/*.md; then
  echo "URL already in database"
  exit 1
fi

# 2024/02-11/title.md
filedir=$(date +%Y/%m-%d)
tmpfilename="$filedir/tmp.md"
mkdir -p "$filedir"
trap "rm -f $tmpfilename" EXIT

# cp assets/linktmpl.txt $filename
bin/urlsummarize.sh "$url" > $tmpfilename

# find a line like
# filename: ApacheSling_ContentExportToFilesystem.md
# and extract the filename

filename=$(ggrep -oP 'filename: \K.*' $tmpfilename)
if [[ -z "$filename" ]]; then
  echo "Could not extract filename from $tmpfilename"
  exit 1
fi

# add .md to filename if it isn't already there
if [[ ! $filename == *.md ]]; then
  filename="$filename.md"
fi

mv $tmpfilename $filedir/$filename

# check that $filedir/$filename is a readable file and not a directory
if [[ ! -f $filedir/$filename ]]; then
  echo "Could not find file $filedir/$filename"
  exit 1
fi
intellij $filedir/$filename
