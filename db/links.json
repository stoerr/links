[
  {
    "filepath": "2024/02-11/wizardzine.md",
    "category": "productivity,development",
    "url": "https",
    "text": "# Wizard Zines\n\nhttps://wizardzines.com/comics/ \n\nAn entertaining set of tipps for programmers - with a surprising amount of useful\nnice little stuff you might not have heard about even as a seasoned SoftwareEngineer ."
  },
  {
    "filepath": "2024/02-12/TheArtOfCodingACruelOptimism.md",
    "category": "AI,Coding,Education,Artificial Intelligence,Code Generation",
    "url": "https",
    "title": "The Art of Coding - A Cruel Optimism?",
    "description": "An exploration into the potential and pitfalls of leveraging AI in the art of coding,particularly as a learning tool.",
    "text": "# The Art of Coding: A Cruel Optimism?\n\nhttps://medium.com/electronic-life/the-art-of-coding-a-cruel-optimism-59fc52571e91\n\n## Description\n\nAn exploration into the potential and pitfalls of leveraging AI in the art of coding, particularly as a learning tool.\n\n## Summary\n\n\"The Art of Coding: A Cruel Optimism?\" by Sunil Manghani narrates the creation and use of a custom GPT called *The Art of Coding*, designed as an AI assistant to teach coding. This tool targets individuals such as art professors interested in coding by offering explanations, feedback, and the ability to improve their Python programming skills. By leveraging the wealth of coding examples available, the AI demonstrates a natural proficiency in teaching coding, potentially revolutionizing software development by making it more accessible. The essay further discusses the broader implications of AI coding tools like GitHub Copilot and CodiumAI's AlphaCodium, pondering whether the ease and automation brought by such tools could undermine the quality and originality of coding.\n\nManghani draws on historical parallels such as Walter Benjamin's reflections on how photography changed art's nature and accessibility. Similarly, AI in coding could democratize the ability to program software, encouraging creativity and innovation outside traditional confines. However, the author also articulates concerns regarding 'cruel optimism,' a term by Lauren Berlant, highlighting the paradox where the pursuit of efficient coding through AI might hinder deep learning and understanding, leading to over-reliance and potential skill atrophy among programmers. The piece concludes by questioning if the initiative to make coding more accessible through AI assists in expanding creativity or if it inadvertently entrenches a dependency that could stifle the inherent artfulness and human insight in programming.\n\n// same thing as JSON:\n{\n    \"filename\": \"TheArtOfCodingACruelOptimism\",\n    \"category\": \"AI, Coding, Education, Artificial Intelligence, Code Generation\",\n    \"url\": \"https://medium.com/electronic-life/the-art-of-coding-a-cruel-optimism-59fc52571e91\"\n    \"title\": \"The Art of Coding: A Cruel Optimism?\"\n    \"description\": \"An exploration into the potential and pitfalls of leveraging AI in the art of coding, particularly as a learning tool.\"\n    \"summary\": \"The Art of Coding: A Cruel Optimism? by Sunil Manghani narrates the creation and use of a custom GPT called The Art of Coding, designed as an AI assistant to teach coding. This tool targets individuals such as art professors interested in coding by offering explanations, feedback, and the ability to improve their Python programming skills. By leveraging the wealth of coding examples available, the AI demonstrates a natural proficiency in teaching coding, potentially revolutionizing software development by making it more accessible. The essay further discusses the broader implications of AI coding tools like GitHub Copilot and CodiumAI's AlphaCodium, pondering whether the ease and automation brought by such tools could undermine the quality and originality of coding. Manghani draws on historical parallels such as Walter Benjamin's reflections on how photography changed art's nature and accessibility. Similarly, AI in coding could democratize the ability to program software, encouraging creativity and innovation outside traditional confines. However, the author also articulates concerns regarding 'cruel optimism,' a term by Lauren Berlant, highlighting the paradox where the pursuit of efficient coding through AI might hinder deep learning and understanding, leading to over-reliance and potential skill atrophy among programmers. The piece concludes by questioning if the initiative to make coding more accessible through AI assists in expanding creativity or if it inadvertently entrenches a dependency that could stifle the inherent artfulness and human insight in programming.\"\n}"
  },
  {
    "filepath": "2024/02-13/aem-links.md",
    "category": "Adobe Experience Manager,AEM,Cheat Sheets,Solutions",
    "url": "https",
    "title": "GitHub - paulrohrbeck/aem-links - Adobe Experience Manager links,cheat sheets and solutions to common problems.",
    "description": "Curated list of links,cheat sheets,and solutions to common problems for Adobe Experience Manager (AEM).",
    "text": "# GitHub - paulrohrbeck/aem-links: Adobe Experience Manager links, cheat sheets and solutions to common problems.\n\nhttps://github.com/paulrohrbeck/aem-links\n\n## Description\n\nCurated list of links, cheat sheets, and solutions to common problems for Adobe Experience Manager (AEM).\n\n## Summary\n\nThe GitHub repository \"paulrohrbeck/aem-links\" serves as a comprehensive resource hub for Adobe Experience Manager (AEM). It includes a meticulously compiled collection of links, cheat sheets, and solutions to tackle common problems encountered in AEM. Developed and maintained by Paul Rohrbeck, this repository aims to assist AEM developers, architects, and administrators by providing quick access to a wide range of valuable resources.\n\nThis repository covers various aspects of AEM, including component development, project planning, environment setup, and best practices. Among its contents, users can find detailed cheat sheets on topics such as HTL/Sightly, Core Components, Sling models, and Oak queries. It also provides links to external resources like official AEM documentation, community forums, and Adobe's technical blogs, which are essential for anyone working with Adobe's enterprise content management system.\n\nBeyond AEM-specific resources, \"paulrohrbeck/aem-links\" offers guidance on related technologies and tools like Dispatcher configuration, Sling Apache, and Maven project setup. By aggregating these resources in one accessible place, it streamlines the learning and development process for AEM practitioners, making it an invaluable reference for both newcomers and experienced professionals."
  },
  {
    "filepath": "2024/02-13/BedienungsanleitungSamsungGalaxyS7.md",
    "category": "User Manual,Instructions",
    "url": "https",
    "title": "Benutzerhandbuch Samsung Galaxy S7 (SM-G930F)",
    "description": "User manual for Samsung Samsung Galaxy S7 (SM-G930F) in German.",
    "text": "# Benutzerhandbuch Samsung Galaxy S7 (SM-G930F)\n\nhttps://downloadcenter.samsung.com/content/MC/201806/20180607135149892/DE/Ger/start_here.html\n\n## Description\n\nUser manual for Samsung Samsung Galaxy S7 (SM-G930F) in German.\n\n## Summary\n\nThe webpage provides a user manual for Samsung device Samsung Galaxy S7 (SM-G930F) in German. It includes chapters on\nbasic information,\napplications, settings, and the appendix. Users can access further information by clicking on the provided links or\nicons. The page is designed for easy navigation and access to detailed instructions for Samsung device users. The manual\ncovers essential topics for users to maximize their experience with Samsung devices."
  }
]